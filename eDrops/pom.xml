<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.techreier</groupId>
	<artifactId>edrops</artifactId>
	<version>1.0</version>
	<name>edrops</name>
	<description>Thymeleaf/Spring Boot test project aimed at writing notes</description>
	<!--packaging>war</packaging-->
	<packaging>jar</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.6</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>21</java.version>
		<kotlin.version>2.2.20</kotlin.version>
		<mariadb.version>3.5.6</mariadb.version>
		<maven-failsafe-plugin.version>3.5.0</maven-failsafe-plugin.version>
		<maven-surefire-plugin.version>3.5.0</maven-surefire-plugin.version>
		<kotlin.code.style>official</kotlin.code.style>
		<kotlin.compiler.jvmTarget>21</kotlin.compiler.jvmTarget>
		<junit-jupiter.version>6.0.0</junit-jupiter.version>
		<mockk.version>1.14.6</mockk.version>
		<assertJ.version>3.27.6</assertJ.version>
		<!-- fetched automagically-->
		<h2.version>2.4.240</h2.version>
		<flyway.version>11.11.2</flyway.version>
		<flexmark.version>0.64.8</flexmark.version>
		<sanitizer.version>20240325.1</sanitizer.version>
		<apache-poi.version>5.4.1</apache-poi.version>
	</properties>
	
	<!-- Spring Boot Plugin for creating Jar/War files -->
	<build>
		<!-- Version numbers in war file creates undeploy problem  using Tomcat admin console -->
    	<finalName>edrops</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
        		<warSourceDirectory>src/main/resources</warSourceDirectory>
			</configuration>
			</plugin>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<version>${kotlin.version}</version>
				<configuration>
					<compilerPlugins>
						<plugin>jpa</plugin>
						<plugin>spring</plugin>
					</compilerPlugins>
					<jvmTarget>${java.version}</jvmTarget>
				</configuration>
				<dependencies>
					<!-- for hibernate -->
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-noarg</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
					<!-- allow subclossing (e.g. for Spring @configuration) -->
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-allopen</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>compile</id>
						<phase>process-sources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/main/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
					<execution>
						<id>test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>test-compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/test/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<configuration>
							<mainClass>com.techreier.edrops.Main</mainClass>
						</configuration>
					</execution>
				</executions>
				<!--why had to include version for Intellij to spot it the first time?-->
				<!--version>2.7.6</version-->
				<!--version>3.0.0</version-->
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>3.4.1</version>
				<configuration>
					<!--skip>true</skip-->
					<from>
						<image>bellsoft/liberica-openjre-alpine-musl:21</image>
						<credHelper>wincred</credHelper>
					</from>
					<to>
						<image>hansreier/${project.artifactId}</image>
						<credHelper>wincred</credHelper>
					</to>
					<container>
						<ports>
							<port>8080</port>
							<!--port>8443</port-->
						</ports>
						<jvmFlags>
							<!--jvmFlag>-Dspring.profiles.active=docker-mariadb</jvmFlag-->
							<!--jvmFlag>-Dspring.profiles.active=mariadb-dockerized</jvmFlag-->
							<jvmFlag>-Dspring.profiles.active=h2-prod</jvmFlag>
						</jvmFlags>
						<environment>
							<BUILD_TIME>${maven.build.timestamp}</BUILD_TIME>
						</environment>
						<!--environment>
							<DB_PASSWORD>Password</DB_PASSWORD>
						</environment-->
					</container>
					<!--extraDirectories>
						<paths>
							<path>
								<from>./</from>
								<into>/app/resources/markdown</into>
								<includes>*.md</includes>
							</path>
						</paths>
					</extraDirectories-->
				</configuration>
				<!--enables always running Docker build, not always wanted -->
				<!--executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>dockerBuild</goal>
						</goals>
					</execution>
				</executions-->
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<skipITs>true</skipITs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<includes>
						<include>**/*.java</include>
						<include>**/*.kt</include>
					</includes>
					<trimStackTrace>false</trimStackTrace>
					<excludes>
						<exclude>**/IT*.java</exclude>
						<exclude>**/*IT.java</exclude>
						<exclude>**/IT*.kt</exclude>
						<exclude>**/*IT.kt</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals><goal>add-source</goal></goals>
						<configuration>
							<sources>
								<source>${project.basedir}/src/main/kotlin</source>
								<source>${project.basedir}/src/main/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<release>${java.version}</release>
					<compilerArgs>--enable-preview</compilerArgs>
				</configuration>
				<executions>
					<execution>
						<id>compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>testCompile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resource-markdown</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/markdown</outputDirectory>
							<resources>
								<resource>
									<directory>./</directory>
									<includes>
										<include>*.md</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution
						<id>copy-resource-images</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/static/images</outputDirectory>
							<resources>
								<resource>
									<directory>./src/main/resources/markdown/</directory>
									<includes>
										<include>*.jpg</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin-->
		</plugins>
		<!-- For Intellij to detect this as standard web directory, TODO check OK after deploy -->
		<!--resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
		</resources-->
	</build>

	<dependencies>
		<!-- starter poms -->
		<!-- include edrops-core, edrops-web, edrops-thymeleaf, embedded Tomcat server -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>nz.net.ultraq.thymeleaf</groupId>
			<artifactId>thymeleaf-layout-dialect</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- hot swapping, disable cache for template, enable live reload -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <!--scope>provided</scope-->
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- removed temporily for docker -->
		<!-- Spring security-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
			<!-- Temporary explicit version to fix Thymeleaf bug -->
			<version>3.1.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-test-junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertJ.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.mockk</groupId>
			<artifactId>mockk-jvm</artifactId>
			<version>${mockk.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<!-- required for using reflection in Kotlin (ref Spring data JPA) -->
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vladsch.flexmark</groupId>
			<artifactId>flexmark-all</artifactId>
			<version>${flexmark.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
			<artifactId>owasp-java-html-sanitizer</artifactId>
			<version>${sanitizer.version}</version>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flyway.version}</version>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-mysql</artifactId>
			<version>${flyway.version}</version> </dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<!--scope>test</scope-->
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>${mariadb.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${apache-poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${apache-poi.version}</version>
		</dependency>
	</dependencies>

</project>